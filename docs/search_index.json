[["index.html", "3D’omics | Half-volume reaction and Celero adaptor test Manuscript in prep Chapter 1 Introduction 1.1 Prepare the R environment", " 3D’omics | Half-volume reaction and Celero adaptor test Manuscript in prep Antton Alberdi1 2024-05-04 Chapter 1 Introduction This webbook contains all the code used for the study on the effect of probiotics on Salmonella infection in broiler chicken. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/3d-omics/AMAC005_salmonella_trial.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(broom) library(broom.mixed) library(rairtable) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(Hmsc) University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["data-preparation.html", "Chapter 2 Data preparation 2.1 Count data 2.2 Filter and normalise data 2.3 Color scheme 2.4 Wrap working objects", " Chapter 2 Data preparation 2.0.1 Sample metadata sample_metadata &lt;- airtable(&quot;4-MSE-Info&quot;, &quot;appKakM1bnKSekwuW&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;LabBatch_text&quot;,&quot;IntestinalSection&quot;,&quot;SampleType&quot;,&quot;Xcoord&quot;,&quot;Ycoord&quot;,&quot;size&quot;,&quot;cryosection_text&quot;,&quot;buffer_text&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(LabBatch_text %in% c(&quot;MSEB0006&quot;,&quot;MSEB0009&quot;)) %&gt;% rename(batch=LabBatch_text,microsample=ID,section=IntestinalSection,type=SampleType,cryosection=cryosection_text,buffer=buffer_text) %&gt;% select(microsample,section,type,batch,cryosection,buffer,Xcoord,Ycoord,size) %&gt;% unnest(c(section, Xcoord, Ycoord, size)) %&gt;% mutate(protocol = case_when( microsample %in% c(&quot;M300682&quot;,&quot;M300683&quot;,&quot;M300684&quot;,&quot;M300685&quot;,&quot;M300686&quot;,&quot;M300687&quot;,&quot;M300688&quot;,&quot;M300689&quot;,&quot;M300690&quot;,&quot;M300691&quot;,&quot;M300692&quot;,&quot;M300693&quot;,&quot;M300694&quot;,&quot;M300695&quot;,&quot;M300696&quot;,&quot;M300697&quot;) ~ &quot;half_ulv2&quot;, microsample %in% c(&quot;M300650&quot;,&quot;M300651&quot;,&quot;M300652&quot;,&quot;M300653&quot;,&quot;M300654&quot;,&quot;M300655&quot;,&quot;M300656&quot;,&quot;M300657&quot;,&quot;M300658&quot;,&quot;M300659&quot;,&quot;M300660&quot;,&quot;M300661&quot;,&quot;M300662&quot;,&quot;M300663&quot;,&quot;M300664&quot;,&quot;M300665&quot;,&quot;M300666&quot;,&quot;M300667&quot;,&quot;M300668&quot;,&quot;M300669&quot;,&quot;M300670&quot;,&quot;M300671&quot;,&quot;M300672&quot;,&quot;M300673&quot;,&quot;M300674&quot;,&quot;M300675&quot;,&quot;M300676&quot;,&quot;M300677&quot;,&quot;M300678&quot;,&quot;M300679&quot;,&quot;M300680&quot;,&quot;M300681&quot;) ~ &quot;full_celero&quot;, TRUE ~ &quot;full_ulv2&quot;)) %&gt;% arrange(microsample) 2.1 Count data read_counts &lt;- read_tsv(&quot;data/MSEB0006_read_counts.tsv&quot;) %&gt;% left_join(read_tsv(&quot;data/MSEB0009_read_counts.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% rename(genome = 1) %&gt;% pivot_longer(!genome, names_to = &quot;data&quot;, values_to=&quot;counts&quot;) %&gt;% mutate(sample = substr(data, 1, 7)) %&gt;% group_by(genome,sample) %&gt;% summarise(counts=sum(counts), .groups=&quot;drop&quot;) %&gt;% pivot_wider(names_from=&quot;sample&quot;, values_from=&quot;counts&quot;) 2.1.1 Base hit table This is the document containing the number of nucleotide bases have been covered by at least one read in each sample and MAG. This information is used to calculate MAG coverage values. basehits &lt;- read_tsv(&quot;data/MSEB0006_covered_bases.tsv&quot;) %&gt;% left_join(read_tsv(&quot;data/MSEB0009_covered_bases.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% rename(genome = 1) %&gt;% pivot_longer(!genome, names_to = &quot;data&quot;, values_to=&quot;counts&quot;) %&gt;% mutate(sample = substr(data, 1, 7)) %&gt;% group_by(genome,sample) %&gt;% summarise(counts=sum(counts), .groups=&quot;drop&quot;) %&gt;% pivot_wider(names_from=&quot;sample&quot;, values_from=&quot;counts&quot;) 2.1.2 Genome metadata Relevant metadata of genomes is fetched from 2-3 files and merged into one genome metadata object for downstream analyses. 2.1.2.1 Taxonomy This is the raw taxonomy table generated by GTDBtk, which is simplified for downstream analyses. genome_taxonomy &lt;- read_tsv(&quot;data/genome_taxonomy.tsv&quot;) %&gt;% rename(genome = user_genome) %&gt;% mutate(genome = str_replace_all(genome,&quot;\\\\.fa&quot;, &quot;&quot;)) %&gt;% separate(classification, c(&quot;domain&quot;,&quot;phylum&quot;,&quot;class&quot;,&quot;order&quot;,&quot;family&quot;,&quot;genus&quot;,&quot;species&quot;), sep =&quot;;&quot;) %&gt;% select(genome,domain,phylum,class,order,family,genus,species) %&gt;% arrange(match(genome, read_counts$genome)) 2.1.2.2 Genome quality Quality properties of the genomes. genome_quality &lt;- read_tsv(&quot;data/genome_quality.tsv&quot;) %&gt;% rename(genome = 1) %&gt;% mutate(genome = str_replace_all(genome,&quot;\\\\.fa&quot;, &quot;&quot;)) %&gt;% arrange(match(genome, read_counts$genome)) %&gt;% select(genome, Completeness, Contamination, Coding_Density, Genome_Size) %&gt;% rename(completeness=Completeness,contamination=Contamination,coding_density=Coding_Density,length=Genome_Size) 2.1.2.3 Merged metadata object Merge taxonomy, length and quality information genome_metadata &lt;- genome_taxonomy %&gt;% left_join(genome_quality,by=join_by(genome==genome)) #join quality 2.1.3 Genome tree This is the raw tree generated by GTDBtk, which needs to be pruned to obtain the phylogenetic tree of the genomes. Note that the archaeal tree is only generated if any archaeans are detected among the genomes. genome_tree &lt;- read.tree(&quot;data/genome_tree.tre&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=read_counts$genome) # keep only MAG tips 2.1.4 MAG functional annotations This is the raw annotation table generated by DRAM, which is used to generate GIFT data using distillR. genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1,genome=2) 2.2 Filter and normalise data Raw data needs to be filtered and normalised to make it useful for downstream analyses. 2.2.1 Generate coverage table By dividing the number of base hits by the length of each genome, coverage values can be calculated. genome_coverage &lt;- basehits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.2.2 Coverage filtering Genomes that have less than 30% of their length covered by reads are turned into zeros to account for the random allocation of reads across genomes due to mapping heuristics. min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.3 Generate genome count table After filtering the low-coverage reads, read counts are transformed into genome counts using genome-length and read-length information. readlength=150 #change if sequencing read length is different genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.4 Distil functional annotations Raw functional annotations are distilled into genome-inferred functional traits to generate biologically more meaningful functional traits for downstream analyses. genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19)) 2.3 Color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.4 Wrap working objects In the last step, the objects that are needed for downstream analyses are stored in an R object. save(read_counts, read_counts_filt, genome_counts, genome_counts_filt, genome_tree, genome_metadata, genome_gifts, sample_metadata, phylum_colors, file = &quot;data/data.Rdata&quot;) read_counts: Number of reads mapped to each genome in each sample. Note this is the unfiltered and unnormalised raw community composition table. genome_counts: Number of genomes quantified in each sample, calculated through filtering and normalising read_counts. This is the community composition table to be used in downstream analyses unless otherwise stated. genome_tree: Phylogenetic tree of the genomes, to be employed in downstream phylogenetic analyses. genome_metadata: Taxonomic and quality information of the genomes. sample_metadata: Treatment/population and other relevant metadata of the samples. "],["data-quality.html", "Chapter 3 Data quality 3.1 Load statistics 3.2 Individual overview 3.3 Biplots 3.4 Quality flagging", " Chapter 3 Data quality load(&quot;data/data.Rdata&quot;) 3.1 Load statistics read_stats &lt;- read_tsv(c(&quot;https://sid.erda.dk/share_redirect/D9oEqxuxql/reports/by_step/reads_data/multiqc_general_stats.txt&quot;, &quot;https://sid.erda.dk/share_redirect/e0EsEFnsKu/reports/by_step/reads_data/multiqc_general_stats.txt&quot;)) %&gt;% mutate(Sample = str_extract(Sample, &quot;M\\\\d+&quot;)) %&gt;% rename_with(~str_remove(., &quot;FastQC_mqc-generalstats-fastqc-&quot;), starts_with(&quot;FastQC_mqc-generalstats-fastqc-&quot;)) %&gt;% rename(microsample=Sample) %&gt;% select(microsample,percent_duplicates,total_sequences, percent_gc) %&gt;% group_by(microsample) %&gt;% summarise(total_sequences=sum(total_sequences), percent_duplicates=mean(percent_duplicates), percent_gc=mean(percent_gc)) host_mapping_stats &lt;- read_tsv(c(&quot;https://sid.erda.dk/share_redirect/b9ZbTPY0kQ/reports/by_step/preprocess_data/multiqc_samtools_flagstat.txt&quot;, &quot;https://sid.erda.dk/share_redirect/e0EsEFnsKu/reports/by_step/preprocess_data/multiqc_samtools_flagstat.txt&quot;)) %&gt;% mutate(reference = case_when( grepl(&quot;GRCh38&quot;, Sample, ignore.case = TRUE) ~ &quot;human&quot;, grepl(&quot;GRCg7b&quot;, Sample, ignore.case = TRUE) ~ &quot;chicken&quot;, TRUE ~ NA )) %&gt;% filter(reference==&quot;chicken&quot;) %&gt;% mutate(Sample = str_extract(Sample, &quot;M\\\\d+&quot;)) %&gt;% rename(microsample=Sample,reads_mapped_host=mapped_passed,reads_mapped_host_percent=mapped_passed_pct) %&gt;% select(microsample,reads_mapped_host,reads_mapped_host_percent) %&gt;% group_by(microsample) %&gt;% summarise(reads_mapped_host=sum(reads_mapped_host),reads_mapped_host_percent=mean(reads_mapped_host_percent)) human_mapping_stats &lt;- read_tsv(c(&quot;https://sid.erda.dk/share_redirect/b9ZbTPY0kQ/reports/by_step/preprocess_data/multiqc_samtools_flagstat.txt&quot;, &quot;https://sid.erda.dk/share_redirect/e0EsEFnsKu/reports/by_step/preprocess_data/multiqc_samtools_flagstat.txt&quot;)) %&gt;% mutate(reference = case_when( grepl(&quot;GRCh38&quot;, Sample, ignore.case = TRUE) ~ &quot;human&quot;, grepl(&quot;GRCg7b&quot;, Sample, ignore.case = TRUE) ~ &quot;chicken&quot;, TRUE ~ NA )) %&gt;% filter(reference==&quot;human&quot;) %&gt;% mutate(Sample = str_extract(Sample, &quot;M\\\\d+&quot;)) %&gt;% rename(microsample=Sample, reads_mapped_human=mapped_passed,reads_mapped_human_percent=mapped_passed_pct) %&gt;% select(microsample,reads_mapped_human,reads_mapped_human_percent) %&gt;% group_by(microsample) %&gt;% summarise(reads_mapped_human=sum(reads_mapped_human),reads_mapped_human_percent=mean(reads_mapped_human_percent)) quantification_stats &lt;- read_tsv(c( &quot;https://sid.erda.dk/share_redirect/D9oEqxuxql/reports/by_step/quantify_data/multiqc_general_stats.txt&quot;, &quot;https://sid.erda.dk/share_redirect/e0EsEFnsKu/reports/by_step/quantify_data/multiqc_general_stats.txt&quot;)) %&gt;% filter(str_detect(Sample, &quot;mgg-pbdrep&quot;)) %&gt;% mutate(Sample = str_extract(Sample, &quot;M\\\\d+&quot;)) %&gt;% rename_with(~str_remove(., &quot;Samtools: stats_mqc-generalstats-samtools_stats-&quot;), starts_with(&quot;Samtools: stats_mqc-generalstats-samtools_stats-&quot;)) %&gt;% rename_with(~str_remove(., &quot;Samtools: flagstat_mqc-generalstats-samtools_flagstat-&quot;), starts_with(&quot;Samtools: flagstat_mqc-generalstats-samtools_flagstat-&quot;)) %&gt;% rename(microsample=Sample) %&gt;% group_by(microsample) %&gt;% summarise(reads_mapped=sum(reads_mapped),reads_mapped_percent=mean(reads_mapped_percent)) quality_stats &lt;- read_stats %&gt;% left_join(host_mapping_stats, by=join_by(microsample==microsample)) %&gt;% left_join(human_mapping_stats, by=join_by(microsample==microsample)) %&gt;% left_join(quantification_stats, by=join_by(microsample==microsample)) 3.2 Individual overview 3.2.1 Sequencing depth quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=total_sequences,y=microsample,fill=protocol))+ geom_col()+ scale_fill_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + geom_vline(xintercept=10000000, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Number of reads&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.2 Sequence duplication quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=percent_duplicates,y=microsample,fill=protocol))+ geom_col()+ scale_fill_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + geom_vline(xintercept=65, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Percentage of duplicates&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.3 GC % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=percent_gc,y=microsample,fill=buffer))+ geom_col()+ scale_fill_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;)) + geom_vline(xintercept=55, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Percentage of GC&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.4 Host % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=reads_mapped_host_percent,y=microsample,fill=protocol))+ geom_col()+ scale_fill_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + geom_vline(xintercept=55, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Host %&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.5 Human % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=reads_mapped_human_percent,y=microsample,fill=protocol))+ geom_col()+ scale_fill_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + geom_vline(xintercept=55, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Human %&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.6 Bacteria mapping % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=reads_mapped_percent,y=microsample,fill=protocol))+ geom_col()+ scale_fill_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + geom_vline(xintercept=60, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Mapped to MAGs (%)&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.3 Biplots 3.3.1 Sequencing depth vs. GC % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% ggplot(aes(x=percent_gc,y=total_sequences,color=protocol))+ geom_point()+ scale_color_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + facet_nested(. ~ batch, scales=&quot;free&quot;) + labs(color=&quot;Library protocol&quot;) 3.3.2 Duplicates vs. GC % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% ggplot(aes(x=percent_gc,y=percent_duplicates,color=protocol))+ geom_point()+ scale_color_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + facet_nested(. ~ batch, scales=&quot;free&quot;)+ labs(color=&quot;Library protocol&quot;) 3.4 Quality flagging quality &lt;- quality_stats %&gt;% mutate(depth = case_when( total_sequences &lt;= 10000000 ~ 0, total_sequences &gt; 10000000 ~ 1, TRUE ~ NA)) %&gt;% mutate(duplicates = case_when( percent_duplicates &gt;= 65 ~ 0, percent_duplicates &lt; 65 ~ 1, TRUE ~ NA)) %&gt;% mutate(gc = case_when( percent_gc &gt;= 55 ~ 0, percent_gc &lt; 55 ~ 1, TRUE ~ NA)) %&gt;% mutate(human = case_when( reads_mapped_human_percent &gt;= 5 ~ 0, reads_mapped_human_percent &lt; 5 ~ 1, TRUE ~ NA)) %&gt;% mutate(bacteria = case_when( reads_mapped_percent &lt;= 60 ~ 0, reads_mapped_percent &gt; 60 ~ 1, TRUE ~ NA)) %&gt;% select(microsample, depth, duplicates, gc, human, bacteria) %&gt;% mutate(quality = depth + duplicates + gc + human + bacteria) %&gt;% select(microsample, quality) quality %&gt;% write_tsv(&quot;results/quality.tsv&quot;) 3.4.1 Quality overview quality %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=quality,y=microsample,fill=protocol))+ geom_col()+ scale_fill_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + geom_vline(xintercept=5, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Quality score&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) quality %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% group_by(protocol) %&gt;% summarise(average=mean(quality, na.rm=TRUE), percentage_5 = mean(quality == 5, na.rm = TRUE) * 100) %&gt;% tt() tinytable_ks13y9vnyr5wl9i4knk4 .table td.tinytable_css_ix4d379ywx9vt7fokxte, .table th.tinytable_css_ix4d379ywx9vt7fokxte { border-bottom: solid 0.1em #d3d8dc; } protocol average percentage_5 full_celero 3.857143 57.14286 full_ulv2 4.500000 77.77778 half_ulv2 4.500000 85.71429 "],["community-composition.html", "Chapter 4 Community composition 4.1 Taxonomy barplot", " Chapter 4 Community composition load(&quot;data/data.Rdata&quot;) quality &lt;- read_tsv(&quot;results/quality.tsv&quot;) Rows: 151 Columns: 2 ── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (1): microsample dbl (1): quality ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. 4.1 Taxonomy barplot 4.1.1 Positive samples, coverage-filtered #Get phylum colors from the EHI standard phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() Rows: 202 Columns: 2 ── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;microsample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(sample_metadata, by = join_by(microsample == microsample)) %&gt;% #append sample metadata left_join(quality, by = join_by(microsample == microsample)) %&gt;% #append sample metadata mutate(section=unlist(section)) %&gt;% filter(!is.na(count)) %&gt;% filter(count &gt; 0) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% filter(quality == 5) %&gt;% ggplot(., aes(x=count,y=microsample, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors[-4]) + labs(x = &quot;Relative abundance&quot;, y=&quot;Microsamples&quot;) + facet_nested(batch + protocol ~ ., scales=&quot;free_y&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(strip.text.y = element_text(angle = 0), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.spacing = unit(0, &quot;lines&quot;)) + labs(fill=&quot;Phylum&quot;) 4.1.2 Positive samples, coverage-unfiltered #Get phylum colors from the EHI standard phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() Rows: 202 Columns: 2 ── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. genome_counts %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;microsample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(sample_metadata, by = join_by(microsample == microsample)) %&gt;% #append sample metadata left_join(quality, by = join_by(microsample == microsample)) %&gt;% #append sample metadata mutate(section=unlist(section)) %&gt;% filter(!is.na(count)) %&gt;% filter(count &gt; 0) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% filter(quality == 5) %&gt;% ggplot(., aes(x=count,y=microsample, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(x = &quot;Relative abundance&quot;, y=&quot;Microsamples&quot;) + facet_nested(batch + protocol ~ ., scales=&quot;free_y&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(strip.text.y = element_text(angle = 0), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.spacing = unit(0, &quot;lines&quot;)) + labs(fill=&quot;Phylum&quot;) 4.1.3 Control samples, coverage-unfiltered #Get phylum colors from the EHI standard phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% #filter(phylum %in% c(&quot;p__Actinomycetota&quot;,&quot;p__Bacillota&quot;,&quot;p__Bacillota_A&quot;,&quot;p__Pseudomonadota&quot;,&quot;p__Verrucomicrobiota&quot;)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() Rows: 202 Columns: 2 ── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. genome_counts %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;microsample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(microsample == microsample)) %&gt;% #append sample metadata filter(is.na(Xcoord)) %&gt;% filter(type %in% c(&quot;NegativeMembrane&quot;,&quot;NegativeCollection&quot;,&quot;NegativeReaction&quot;)) %&gt;% ggplot(., aes(x=count,y=microsample, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(x = &quot;Relative abundance&quot;, y=&quot;Membrane controls&quot;) + facet_nested(batch + type + protocol ~ ., scales=&quot;free_y&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(strip.text.y = element_text(angle = 0), axis.text.y = element_blank(), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.spacing = unit(0, &quot;lines&quot;)) + labs(fill=&quot;Phylum&quot;) vertical_tree &lt;- force.ultrametric(genome_tree,method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) + geom_tiplab() *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** Found more than one class &quot;phylo&quot; in cache; using the first, from namespace &#39;phyloseq&#39; Also defined by &#39;tidytree&#39; phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% select(phylum) Rows: 202 Columns: 2 ── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() Rows: 202 Columns: 2 ── Column specification ───────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. vertical_tree &lt;- gheatmap(vertical_tree, phylum_colors, offset=-0.3, width=0.1, colnames=FALSE) + scale_fill_manual(values=colors_alphabetic) + new_scale_fill() Scale for y is already present. Adding another scale for y, which will replace the existing scale. Scale for fill is already present. Adding another scale for fill, which will replace the existing scale. sample_selection &lt;- sample_metadata %&gt;% filter(!is.na(Xcoord)) %&gt;% filter(cryosection == &quot;G121eI101B&quot;) %&gt;% left_join(quality, by=join_by(microsample==microsample)) %&gt;% filter(quality&gt;=5) %&gt;% select(microsample) %&gt;% pull() genome_counts_selected &lt;- genome_counts_filt %&gt;% select(all_of(c(&quot;genome&quot;,sample_selection))) %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% tss() vertical_tree &lt;- gheatmap(vertical_tree, genome_counts_selected, offset=-0.2, width=0.5, colnames=FALSE, colnames_angle=90, font.size=3, colnames_position=&quot;top&quot;, colnames_offset_y = 15) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;#315b7d&quot;, na.value=&quot;#f4f4f4&quot;) + new_scale_fill() Scale for y is already present. Adding another scale for y, which will replace the existing scale. Scale for fill is already present. Adding another scale for fill, which will replace the existing scale. vertical_tree "],["alpha-diversity.html", "Chapter 5 Alpha diversity 5.1 Filtered 5.2 Unfiltered", " Chapter 5 Alpha diversity 5.1 Filtered #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(microsample==microsample)) %&gt;% full_join(phylogenetic,by=join_by(microsample==microsample)) %&gt;% left_join(sample_metadata, by=join_by(microsample==microsample)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(&quot;results/alpha_div_filtered.tsv&quot;) # Print alpha diversity alpha_diversity %&gt;% select(microsample,richness, neutral, phylogenetic, section, buffer, batch, protocol, Xcoord, Ycoord, size) %&gt;% tt() tinytable_k0aa6c3xvdymtvn107ys .table td.tinytable_css_1zdcyvewu282opncvmmd, .table th.tinytable_css_1zdcyvewu282opncvmmd { border-bottom: solid 0.1em #d3d8dc; } microsample richness neutral phylogenetic section buffer batch protocol Xcoord Ycoord size M300554 105 45.801912 3.911416 Caecum right B11 MSEB0006 full_ulv2 74953.325 27445.67 4976 M300555 3 2.654441 1.657236 Caecum right B11 MSEB0006 full_ulv2 72020.280 33695.14 4976 M300556 3 2.921247 1.813378 Caecum right B11 MSEB0006 full_ulv2 75415.387 27819.35 4976 M300557 81 43.169579 3.712575 Caecum right B11 MSEB0006 full_ulv2 76113.477 28351.85 4976 M300559 105 46.235275 3.924148 Caecum right B11 MSEB0006 full_ulv2 76849.228 29025.05 4976 M300560 99 44.437305 4.065477 Caecum right B11 MSEB0006 full_ulv2 75971.705 29352.86 4976 M300561 103 44.311493 4.092159 Caecum right B11 MSEB0006 full_ulv2 76680.937 29558.16 4976 M300562 103 46.882732 4.021131 Caecum right B11 MSEB0006 full_ulv2 74883.318 29170.18 5140 M300563 109 47.059960 3.989914 Caecum right B11 MSEB0006 full_ulv2 75220.992 29120.51 5140 M300564 12 10.477468 2.957506 Caecum right B11 MSEB0006 full_ulv2 75894.617 29134.86 5140 M300566 93 43.059847 3.761573 Caecum right B11 MSEB0006 full_ulv2 76922.541 29224.45 5140 M300567 99 44.029116 4.012374 Caecum right B11 MSEB0006 full_ulv2 77492.203 29097.78 5140 M300569 100 46.805777 4.101282 Caecum right B11 MSEB0006 full_ulv2 77495.465 28977.76 5140 M300570 100 44.462204 3.951953 Caecum right B11 MSEB0006 full_ulv2 74950.841 28473.11 4815 M300571 94 42.482781 3.877417 Caecum right B11 MSEB0006 full_ulv2 75619.946 28632.40 4815 M300572 56 32.680577 3.739918 Caecum right B11 MSEB0006 full_ulv2 76345.933 29031.81 4815 M300574 97 43.914978 3.965100 Caecum right B11 MSEB0006 full_ulv2 76920.997 29347.99 4815 M300576 92 43.158898 3.953223 Caecum right B11 MSEB0006 full_ulv2 77104.532 29588.79 4815 M300577 103 44.666492 3.976265 Caecum right B11 MSEB0006 full_ulv2 77418.895 29907.92 4815 M300578 101 44.526067 3.915702 Caecum right B12 MSEB0006 full_ulv2 76897.212 30198.48 5140 M300580 102 43.777961 3.939951 Caecum right B12 MSEB0006 full_ulv2 77026.940 30039.53 5140 M300581 79 39.975639 3.872346 Caecum right B12 MSEB0006 full_ulv2 77028.597 29718.20 5140 M300582 78 38.898531 3.881888 Caecum right B12 MSEB0006 full_ulv2 77019.213 29448.24 5140 M300583 95 38.373844 3.975637 Caecum right B12 MSEB0006 full_ulv2 77009.202 28923.10 5140 M300584 104 44.918626 3.965482 Caecum right B12 MSEB0006 full_ulv2 77019.413 28061.84 5140 M300588 102 42.618728 3.970993 Caecum right B12 MSEB0006 full_ulv2 75330.017 26890.36 5141 M300589 99 41.459691 3.936518 Caecum right B12 MSEB0006 full_ulv2 75862.866 27323.96 5141 M300590 96 40.482162 4.103071 Caecum right B12 MSEB0006 full_ulv2 76508.231 27653.84 5141 M300592 103 40.971234 4.064549 Caecum right B12 MSEB0006 full_ulv2 77351.464 28017.27 5141 M300593 98 42.126550 4.054750 Caecum right B12 MSEB0006 full_ulv2 77854.216 28261.49 5141 M300594 96 43.659879 4.039384 Caecum right B12 MSEB0006 full_ulv2 75509.650 26477.82 4976 M300595 102 37.738766 4.048987 Caecum right B12 MSEB0006 full_ulv2 75650.540 26591.91 4976 M300596 105 40.160724 4.033115 Caecum right B12 MSEB0006 full_ulv2 75822.838 26598.11 4976 M300597 100 40.582505 4.079831 Caecum right B12 MSEB0006 full_ulv2 76147.102 26625.28 4976 M300598 101 41.887011 4.025419 Caecum right B12 MSEB0006 full_ulv2 76899.245 26623.52 4976 M300599 104 42.932100 3.943969 Caecum right B12 MSEB0006 full_ulv2 76852.725 26643.02 4976 M300602 4 3.258694 1.446601 Ileum B11 MSEB0006 full_ulv2 104424.700 42749.48 5140 M300603 3 2.026603 1.264579 Ileum B11 MSEB0006 full_ulv2 104606.900 42459.54 5140 M300605 2 1.729081 1.214454 Ileum B11 MSEB0006 full_ulv2 104954.500 42730.89 5140 M300606 1 1.000000 1.000000 Ileum B11 MSEB0006 full_ulv2 105122.500 42666.74 5140 M300608 4 2.614424 1.427086 Ileum B11 MSEB0006 full_ulv2 105262.700 42589.77 5140 M300609 4 3.096111 1.455646 Ileum B11 MSEB0006 full_ulv2 105328.900 42703.60 5140 M300610 4 3.092445 1.478474 Ileum B11 MSEB0006 full_ulv2 105102.400 41497.10 4976 M300611 1 1.000000 1.000000 Ileum B11 MSEB0006 full_ulv2 105146.000 41596.22 4976 M300612 4 3.200070 1.466971 Ileum B11 MSEB0006 full_ulv2 105281.000 41702.52 4976 M300613 1 1.000000 1.000000 Ileum B11 MSEB0006 full_ulv2 105408.300 41533.66 4976 M300616 3 1.602470 1.192713 Ileum B11 MSEB0006 full_ulv2 105595.700 41999.37 4976 M300617 4 2.597621 1.410566 Ileum B11 MSEB0006 full_ulv2 105983.000 42106.21 4976 M300619 3 1.859573 1.237721 Ileum B11 MSEB0006 full_ulv2 106845.700 41525.80 5306 M300622 3 2.658765 1.353273 Ileum B11 MSEB0006 full_ulv2 107262.300 42133.87 5306 M300623 3 2.873136 1.380176 Ileum B11 MSEB0006 full_ulv2 107820.600 41925.02 5306 M300624 1 1.000000 1.000000 Ileum B11 MSEB0006 full_ulv2 107233.500 41764.35 5306 M300627 3 2.862931 1.378919 Ileum B12 MSEB0006 full_ulv2 108112.000 45420.81 4815 M300628 4 2.628829 1.499791 Ileum B12 MSEB0006 full_ulv2 108221.600 45346.45 4815 M300629 4 1.907144 1.302185 Ileum B12 MSEB0006 full_ulv2 108085.500 45636.13 4815 M300630 4 1.854313 1.280920 Ileum B12 MSEB0006 full_ulv2 108093.700 45848.93 4815 M300631 5 3.608828 1.721713 Ileum B12 MSEB0006 full_ulv2 107697.500 45704.29 4815 M300633 6 2.179216 1.433128 Ileum B12 MSEB0006 full_ulv2 107727.500 45487.09 4815 M300634 5 2.654260 1.433183 Ileum B12 MSEB0006 full_ulv2 106635.900 42106.55 5384 M300636 4 2.513021 1.484550 Ileum B12 MSEB0006 full_ulv2 106545.500 42220.70 5384 M300638 4 2.712719 1.464181 Ileum B12 MSEB0006 full_ulv2 106647.000 42288.86 5384 M300639 7 2.562594 1.486765 Ileum B12 MSEB0006 full_ulv2 106800.500 41821.88 5384 M300640 3 2.025162 1.264308 Ileum B12 MSEB0006 full_ulv2 107052.700 42525.49 5384 M300642 1 1.000000 1.000000 Ileum B12 MSEB0006 full_ulv2 108030.700 43599.50 4976 M300644 5 1.600004 1.208205 Ileum B12 MSEB0006 full_ulv2 NA NA NA M300645 5 1.502894 1.239684 Ileum B12 MSEB0006 full_ulv2 107988.200 43509.47 4976 M300647 5 3.154388 1.457167 Ileum B12 MSEB0006 full_ulv2 107969.500 43138.84 4976 M300648 5 1.758864 1.265810 Ileum B12 MSEB0006 full_ulv2 107883.700 43169.50 4976 M300651 102 46.742684 3.929222 Caecum right B12 MSEB0009 full_celero 11906.706 17302.78 5140 M300652 100 42.923634 4.114776 Caecum right B12 MSEB0009 full_celero 14050.460 17001.92 5140 M300654 96 37.251363 3.830623 Caecum right B12 MSEB0009 full_celero 14807.470 19475.98 5140 M300656 7 6.275011 2.411725 Caecum right B12 MSEB0009 full_celero 15095.242 18655.46 5140 M300657 34 19.736256 3.557363 Caecum right B12 MSEB0009 full_celero 15154.326 19081.92 5140 M300658 99 42.314901 4.036385 Caecum right B12 MSEB0009 full_celero 9192.814 19234.39 4976 M300659 119 42.309365 3.994236 Caecum right B12 MSEB0009 full_celero 12511.076 19365.33 4976 M300661 103 39.608207 3.905772 Caecum right B12 MSEB0009 full_celero 11699.514 20259.00 4976 M300662 104 44.515529 3.819290 Caecum right B12 MSEB0009 full_celero 13804.910 20094.72 4976 M300664 15 11.273184 3.132174 Caecum right B12 MSEB0009 full_celero 12513.988 21896.24 4976 M300665 4 2.814786 1.704808 Caecum right B12 MSEB0009 full_celero 9669.578 19330.82 4976 M300666 111 42.796930 3.995646 Caecum right B12 MSEB0009 full_celero 10924.656 21602.49 5384 M300668 108 39.784202 3.977135 Caecum right B12 MSEB0009 full_celero 14208.788 22187.84 5384 M300669 104 41.185041 4.089677 Caecum right B12 MSEB0009 full_celero 13658.990 21278.18 5384 M300670 85 39.361771 3.851039 Caecum right B12 MSEB0009 full_celero 15752.910 20908.01 5384 M300671 104 40.283873 4.066253 Caecum right B12 MSEB0009 full_celero 13086.410 21703.25 5384 M300672 94 40.061994 3.858419 Caecum right B12 MSEB0009 full_celero 13311.294 20916.06 5384 M300673 98 38.528300 4.029266 Caecum right B12 MSEB0009 full_celero 14520.766 22307.33 5384 M300674 109 44.864962 3.943580 Caecum right B12 MSEB0009 full_celero 12054.270 23154.78 5051 M300675 114 44.861236 3.939224 Caecum right B12 MSEB0009 full_celero 13501.846 20960.88 5051 M300676 96 39.189195 4.028682 Caecum right B12 MSEB0009 full_celero 14952.726 23717.40 5051 M300677 31 20.289760 3.183021 Caecum right B12 MSEB0009 full_celero 12773.380 21535.84 5051 M300678 116 43.357715 3.994201 Caecum right B12 MSEB0009 full_celero 12504.528 21793.47 5051 M300679 104 41.578976 3.992278 Caecum right B12 MSEB0009 full_celero 12589.016 20536.83 5051 M300680 112 44.937212 4.032103 Caecum right B12 MSEB0009 full_celero 13215.834 22405.85 5051 M300681 2 1.999637 1.764608 Caecum right B12 MSEB0009 full_celero NA NA NA M300682 6 5.048966 2.842439 Caecum right B12 MSEB0009 half_ulv2 14464.852 18168.78 4976 M300683 96 39.991157 4.070488 Caecum right B12 MSEB0009 half_ulv2 15660.538 17029.20 4976 M300684 97 38.327913 3.983029 Caecum right B12 MSEB0009 half_ulv2 13001.740 18200.66 4976 M300687 106 42.965867 3.998442 Caecum right B12 MSEB0009 half_ulv2 14317.052 18439.38 4976 M300688 102 41.106310 3.898127 Caecum right B12 MSEB0009 half_ulv2 14710.394 18826.57 4976 M300689 94 40.781853 4.001373 Caecum right B12 MSEB0009 half_ulv2 14280.268 17123.50 4976 M300690 97 40.763262 4.104831 Caecum right B12 MSEB0009 half_ulv2 9132.332 19004.86 5140 M300691 117 43.804454 4.019294 Caecum right B12 MSEB0009 half_ulv2 9914.940 18812.94 5140 M300692 105 44.986055 4.091548 Caecum right B12 MSEB0009 half_ulv2 12814.906 20311.48 5140 M300694 84 37.691549 3.890651 Caecum right B12 MSEB0009 half_ulv2 12365.162 19024.05 5140 M300695 97 42.198415 3.886696 Caecum right B12 MSEB0009 half_ulv2 13549.800 18825.93 5140 M300696 103 41.230141 4.023761 Caecum right B12 MSEB0009 half_ulv2 12894.764 18832.32 5140 M300697 88 40.517297 4.047342 Caecum right B12 MSEB0009 half_ulv2 13465.594 19185.00 5140 M300698 7 2.528667 1.440155 Ileum B02 MSEB0009 full_ulv2 NA NA NA M300699 8 2.595056 1.452254 Ileum B02 MSEB0009 full_ulv2 NA NA NA M300700 9 3.078360 1.535261 Ileum B12 MSEB0009 full_ulv2 NA NA NA M300701 8 3.259559 1.578356 Ileum B12 MSEB0009 full_ulv2 NA NA NA Undeter 114 45.506971 4.113590 NA NA NA NA NA NA NA # Print alpha diversity summary alpha_diversity %&gt;% select(richness, neutral, phylogenetic, section, batch, protocol) %&gt;% group_by(section, batch, protocol) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() tinytable_4pvjhnqqsh88ztlpl0pi .table td.tinytable_css_bntx3cf1mf3t5pc74as6, .table th.tinytable_css_bntx3cf1mf3t5pc74as6 { border-bottom: solid 0.1em #d3d8dc; } section batch protocol richness neutral phylogenetic Caecum right MSEB0006 full_ulv2 89.50000 39.563947 3.814879 Caecum right MSEB0009 full_celero 83.50000 34.570989 3.660827 Caecum right MSEB0009 half_ulv2 91.69231 38.416403 3.912156 Ileum MSEB0006 full_ulv2 3.59375 2.222942 1.320274 Ileum MSEB0009 full_ulv2 8.00000 2.865410 1.501506 NA NA NA 114.00000 45.506971 4.113590 alpha_diversity %&gt;% pivot_longer(!c(microsample,section,cryosection,type,buffer,batch,protocol,Xcoord,Ycoord,size), names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(quality,by=join_by(microsample==microsample)) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(x=protocol, y=value, color=quality, group=protocol))+ scale_color_gradient(low = &quot;red&quot;, high = &quot;green&quot;, name = &quot;Quality&quot;) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.2) + facet_grid(metric ~ section, scales = &quot;free&quot;) alpha_diversity %&gt;% pivot_longer(!c(microsample,section,cryosection,type,buffer,batch,protocol,Xcoord,Ycoord,size), names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(quality,by=join_by(microsample==microsample)) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(x=batch, y=value, color=quality, group=batch))+ scale_color_gradient(low = &quot;red&quot;, high = &quot;green&quot;, name = &quot;Quality&quot;) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.2) + facet_grid(metric ~ section, scales = &quot;free&quot;) 5.2 Unfiltered #Calculate Hill numbers richness &lt;- genome_counts %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) neutral &lt;- genome_counts %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) phylogenetic &lt;- genome_counts %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(microsample==microsample)) %&gt;% full_join(phylogenetic,by=join_by(microsample==microsample)) %&gt;% left_join(sample_metadata, by=join_by(microsample==microsample)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(&quot;results/alpha_div_unfiltered.tsv&quot;) # Print alpha diversity alpha_diversity %&gt;% select(microsample,richness, neutral, phylogenetic, section, buffer, Xcoord, Ycoord, size) %&gt;% tt() tinytable_tkqh6wv2479q9iuju3zp .table td.tinytable_css_fxoh1e2dxftidlwqoq0t, .table th.tinytable_css_fxoh1e2dxftidlwqoq0t { border-bottom: solid 0.1em #d3d8dc; } microsample richness neutral phylogenetic section buffer Xcoord Ycoord size M300554 252 59.048724 4.005426 Caecum right B11 74953.325 27445.67 4976 M300555 234 29.591689 3.136402 Caecum right B11 72020.280 33695.14 4976 M300556 242 52.377341 3.862228 Caecum right B11 75415.387 27819.35 4976 M300557 252 60.880377 3.919625 Caecum right B11 76113.477 28351.85 4976 M300558 147 16.388623 3.084364 Caecum right B11 NA NA NA M300559 252 59.602278 4.019172 Caecum right B11 76849.228 29025.05 4976 M300560 252 58.645287 4.181971 Caecum right B11 75971.705 29352.86 4976 M300561 252 57.105278 4.190661 Caecum right B11 76680.937 29558.16 4976 M300562 252 60.378741 4.115130 Caecum right B11 74883.318 29170.18 5140 M300563 252 59.645294 4.072592 Caecum right B11 75220.992 29120.51 5140 M300564 246 52.890970 4.203353 Caecum right B11 75894.617 29134.86 5140 M300565 48 13.113524 4.215440 Caecum right B11 72986.812 36482.20 5140 M300566 251 58.164898 3.882696 Caecum right B11 76922.541 29224.45 5140 M300567 252 57.810869 4.124295 Caecum right B11 77492.203 29097.78 5140 M300568 40 10.638020 2.635867 Caecum right B11 NA NA NA M300569 252 60.745119 4.196834 Caecum right B11 77495.465 28977.76 5140 M300570 252 57.723816 4.052962 Caecum right B11 74950.841 28473.11 4815 M300571 251 56.661744 4.017740 Caecum right B11 75619.946 28632.40 4815 M300572 249 56.949762 4.191364 Caecum right B11 76345.933 29031.81 4815 M300573 178 34.564442 3.598634 Caecum right B11 74609.411 34469.39 4815 M300574 251 57.725467 4.082745 Caecum right B11 76920.997 29347.99 4815 M300575 135 59.863456 4.655632 Caecum right B11 NA NA NA M300576 251 57.389815 4.083745 Caecum right B11 77104.532 29588.79 4815 M300577 252 57.842513 4.079376 Caecum right B11 77418.895 29907.92 4815 M300578 252 57.743125 4.012410 Caecum right B12 76897.212 30198.48 5140 M300579 221 38.829262 3.357156 Caecum right B12 73304.285 36352.33 5140 M300580 250 55.871239 4.042301 Caecum right B12 77026.940 30039.53 5140 M300581 252 56.693254 4.077549 Caecum right B12 77028.597 29718.20 5140 M300582 251 55.908533 4.078589 Caecum right B12 77019.213 29448.24 5140 M300583 252 51.029088 4.100996 Caecum right B12 77009.202 28923.10 5140 M300584 252 57.684739 4.058398 Caecum right B12 77019.413 28061.84 5140 M300585 85 36.312174 5.379855 Caecum right B12 NA NA NA M300586 48 21.091967 4.510739 Caecum right B12 73652.539 35857.69 5141 M300587 8 3.491849 1.592392 Caecum right B12 NA NA NA M300588 252 54.764773 4.072549 Caecum right B12 75330.017 26890.36 5141 M300589 253 54.565428 4.052600 Caecum right B12 75862.866 27323.96 5141 M300590 252 53.695112 4.232105 Caecum right B12 76508.231 27653.84 5141 M300591 193 44.669792 3.308027 Caecum right B12 76848.926 27815.44 5141 M300592 251 52.703789 4.157326 Caecum right B12 77351.464 28017.27 5141 M300593 253 54.697582 4.159239 Caecum right B12 77854.216 28261.49 5141 M300594 252 57.267685 4.154592 Caecum right B12 75509.650 26477.82 4976 M300595 251 49.303188 4.159722 Caecum right B12 75650.540 26591.91 4976 M300596 252 51.537550 4.129928 Caecum right B12 75822.838 26598.11 4976 M300597 251 52.894386 4.187497 Caecum right B12 76147.102 26625.28 4976 M300598 252 54.366506 4.127848 Caecum right B12 76899.245 26623.52 4976 M300599 252 55.014439 4.041644 Caecum right B12 76852.725 26643.02 4976 M300600 37 12.471508 3.871589 Caecum right B12 NA NA NA M300601 122 44.752920 6.549661 Caecum right B12 72982.582 21722.53 4976 M300602 195 3.770399 1.526286 Ileum B11 104424.700 42749.48 5140 M300603 172 3.443781 1.761321 Ileum B11 104606.900 42459.54 5140 M300604 54 11.488595 3.430860 Ileum B11 101758.400 36668.70 5140 M300605 154 3.468041 1.580848 Ileum B11 104954.500 42730.89 5140 M300606 231 42.312840 4.055184 Ileum B11 105122.500 42666.74 5140 M300607 25 4.742713 1.877699 Ileum B11 NA NA NA M300608 180 3.093547 1.514223 Ileum B11 105262.700 42589.77 5140 M300609 207 3.586403 1.515176 Ileum B11 105328.900 42703.60 5140 M300610 193 3.434464 1.521143 Ileum B11 105102.400 41497.10 4976 M300611 75 4.120703 1.781889 Ileum B11 105146.000 41596.22 4976 M300612 186 3.576177 1.512044 Ileum B11 105281.000 41702.52 4976 M300613 71 2.227148 1.360170 Ileum B11 105408.300 41533.66 4976 M300614 51 13.957408 4.473484 Ileum B11 101928.600 37181.60 4976 M300615 76 33.344988 4.963147 Ileum B11 NA NA NA M300616 174 1.845652 1.249203 Ileum B11 105595.700 41999.37 4976 M300617 236 5.332503 1.984855 Ileum B11 105983.000 42106.21 4976 M300618 56 8.503252 2.626672 Ileum B11 101861.400 37375.71 5306 M300619 175 2.550470 1.410755 Ileum B11 106845.700 41525.80 5306 M300620 28 7.640770 2.905044 Ileum B11 NA NA NA M300621 119 12.148781 3.349201 Ileum B11 107360.500 41744.06 5306 M300622 221 4.591257 1.766175 Ileum B11 107262.300 42133.87 5306 M300623 160 3.966379 1.799967 Ileum B11 107820.600 41925.02 5306 M300624 115 1.651694 1.232074 Ileum B11 107233.500 41764.35 5306 M300625 144 5.388601 2.320102 Ileum B11 107258.100 42448.02 5306 M300626 41 8.538645 2.863586 Ileum B12 NA NA NA M300627 144 3.518088 1.512361 Ileum B12 108112.000 45420.81 4815 M300628 175 3.173885 1.607903 Ileum B12 108221.600 45346.45 4815 M300629 182 2.393480 1.450458 Ileum B12 108085.500 45636.13 4815 M300630 182 2.332205 1.406259 Ileum B12 108093.700 45848.93 4815 M300631 208 4.627633 1.966486 Ileum B12 107697.500 45704.29 4815 M300632 139 31.364862 4.012416 Ileum B12 102872.400 38456.93 4815 M300633 216 2.511084 1.495177 Ileum B12 107727.500 45487.09 4815 M300634 213 3.122181 1.540972 Ileum B12 106635.900 42106.55 5384 M300635 30 5.405679 2.215422 Ileum B12 NA NA NA M300636 204 3.509144 1.743930 Ileum B12 106545.500 42220.70 5384 M300637 51 2.910588 1.509677 Ileum B12 106948.100 42956.50 5384 M300638 203 3.460643 1.642359 Ileum B12 106647.000 42288.86 5384 M300639 224 2.990724 1.567194 Ileum B12 106800.500 41821.88 5384 M300640 139 2.600750 1.476414 Ileum B12 107052.700 42525.49 5384 M300641 98 27.021534 5.575144 Ileum B12 103203.400 38334.96 5384 M300642 72 2.706444 1.584137 Ileum B12 108030.700 43599.50 4976 M300643 16 5.123028 1.769523 Ileum B12 101876.900 39000.58 4976 M300644 225 1.815382 1.244790 Ileum B12 NA NA NA M300645 192 1.687109 1.278009 Ileum B12 107988.200 43509.47 4976 M300646 64 13.841432 3.496467 Ileum B12 NA NA NA M300647 201 3.557171 1.509236 Ileum B12 107969.500 43138.84 4976 M300648 198 2.029309 1.315127 Ileum B12 107883.700 43169.50 4976 M300649 74 4.148091 1.828161 Ileum B12 107984.200 43047.52 4976 M300650 90 25.547686 5.490960 Caecum right B12 13017.480 NA NA M300651 252 60.334462 4.037827 Caecum right B12 11906.706 17302.78 5140 M300652 252 55.706583 4.230868 Caecum right B12 14050.460 17001.92 5140 M300653 205 23.115889 2.885944 Caecum right B12 15132.646 18629.72 5140 M300654 252 49.719436 3.958627 Caecum right B12 14807.470 19475.98 5140 M300655 66 11.835013 3.758529 Caecum right B12 12921.636 17630.90 5140 M300656 237 51.627998 3.879326 Caecum right B12 15095.242 18655.46 5140 M300657 249 40.393213 4.019623 Caecum right B12 15154.326 19081.92 5140 M300658 252 55.646080 4.151520 Caecum right B12 9192.814 19234.39 4976 M300659 252 52.072344 4.069240 Caecum right B12 12511.076 19365.33 4976 M300660 76 5.499699 2.285934 Caecum right B12 11930.670 19818.58 4976 M300661 253 51.583910 4.013095 Caecum right B12 11699.514 20259.00 4976 M300662 251 56.603450 3.916391 Caecum right B12 13804.910 20094.72 4976 M300663 97 10.308725 4.266069 Caecum right B12 NA NA NA M300664 249 30.493582 3.840296 Caecum right B12 12513.988 21896.24 4976 M300665 240 19.254617 3.317076 Caecum right B12 9669.578 19330.82 4976 M300666 252 53.743891 4.080995 Caecum right B12 10924.656 21602.49 5384 M300667 73 21.078963 5.788265 Caecum right B12 NA NA NA M300668 252 50.277071 4.072904 Caecum right B12 14208.788 22187.84 5384 M300669 252 52.995755 4.195787 Caecum right B12 13658.990 21278.18 5384 M300670 249 54.520367 4.020114 Caecum right B12 15752.910 20908.01 5384 M300671 251 52.121850 4.170802 Caecum right B12 13086.410 21703.25 5384 M300672 252 53.386952 3.983508 Caecum right B12 13311.294 20916.06 5384 M300673 251 50.112142 4.146929 Caecum right B12 14520.766 22307.33 5384 M300674 252 56.789427 4.028199 Caecum right B12 12054.270 23154.78 5051 M300675 252 55.626538 4.026539 Caecum right B12 13501.846 20960.88 5051 M300676 250 52.022526 4.150433 Caecum right B12 14952.726 23717.40 5051 M300677 247 51.570297 3.979858 Caecum right B12 12773.380 21535.84 5051 M300678 253 53.265316 4.073765 Caecum right B12 12504.528 21793.47 5051 M300679 252 52.843053 4.090399 Caecum right B12 12589.016 20536.83 5051 M300680 252 56.085699 4.115161 Caecum right B12 13215.834 22405.85 5051 M300681 199 15.133302 3.203389 Caecum right B12 NA NA NA M300682 237 49.016763 4.129097 Caecum right B12 14464.852 18168.78 4976 M300683 252 52.766786 4.190538 Caecum right B12 15660.538 17029.20 4976 M300684 251 49.976106 4.087444 Caecum right B12 13001.740 18200.66 4976 M300685 222 32.549462 4.768086 Caecum right B12 NA NA NA M300686 215 58.246778 3.986024 Caecum right B12 14173.260 17741.15 4976 M300687 251 54.586232 4.091225 Caecum right B12 14317.052 18439.38 4976 M300688 251 53.413916 4.010619 Caecum right B12 14710.394 18826.57 4976 M300689 252 54.070423 4.127761 Caecum right B12 14280.268 17123.50 4976 M300690 252 53.782859 4.233271 Caecum right B12 9132.332 19004.86 5140 M300691 252 54.125918 4.099929 Caecum right B12 9914.940 18812.94 5140 M300692 252 57.228981 4.188129 Caecum right B12 12814.906 20311.48 5140 M300693 58 23.416149 5.412036 Caecum right B12 NA NA NA M300694 251 51.989711 4.068597 Caecum right B12 12365.162 19024.05 5140 M300695 252 55.251650 4.033557 Caecum right B12 13549.800 18825.93 5140 M300696 251 53.015006 4.124372 Caecum right B12 12894.764 18832.32 5140 M300697 252 55.034448 4.188927 Caecum right B12 13465.594 19185.00 5140 M300698 239 2.871161 1.498583 Ileum B02 NA NA NA M300699 240 2.908721 1.497934 Ileum B02 NA NA NA M300700 244 3.598605 1.600967 Ileum B12 NA NA NA M300701 243 3.910067 1.663592 Ileum B12 NA NA NA M300702 8 3.007004 1.354425 Caecum right NA NA NA NA M300703 6 2.681496 1.290717 Caecum right NA NA NA NA Undeter 253 56.603367 4.191806 NA NA NA NA NA # Print alpha diversity summary alpha_diversity %&gt;% select(richness, neutral, phylogenetic, section, buffer) %&gt;% group_by(section, buffer) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() tinytable_cupnpne4k2m9divxqh8b .table td.tinytable_css_e6hawmewrb0uh0ktbu5u, .table th.tinytable_css_e6hawmewrb0uh0ktbu5u { border-bottom: solid 0.1em #d3d8dc; } section buffer richness neutral phylogenetic Caecum right B11 220.6250 50.239502 3.942011 Caecum right B12 219.5417 46.071485 4.088926 Caecum right NA 7.0000 2.844250 1.322571 Ileum B02 239.5000 2.889941 1.498259 Ileum B11 137.4167 7.924440 2.229897 Ileum B12 153.0000 5.842222 1.956760 NA NA 253.0000 56.603367 4.191806 alpha_diversity %&gt;% pivot_longer(!c(microsample,section,cryosection,type,buffer,batch,protocol,Xcoord,Ycoord,size), names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(quality,by=join_by(microsample==microsample)) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(x=protocol, y=value, color=quality, group=protocol))+ scale_color_gradient(low = &quot;red&quot;, high = &quot;green&quot;, name = &quot;Quality&quot;) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.2) + facet_grid(metric ~ section, scales = &quot;free&quot;) alpha_diversity %&gt;% pivot_longer(!c(microsample,section,cryosection,type,buffer,batch,protocol,Xcoord,Ycoord,size), names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(quality,by=join_by(microsample==microsample)) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(x=batch, y=value, color=quality, group=batch))+ scale_color_gradient(low = &quot;red&quot;, high = &quot;green&quot;, name = &quot;Quality&quot;) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.2) + facet_grid(metric ~ section, scales = &quot;free&quot;) "],["beta-diversity.html", "Chapter 6 Beta diversity 6.1 Caecum", " Chapter 6 Beta diversity 6.1 Caecum caecum_samples &lt;- sample_metadata %&gt;% filter(cryosection == &quot;G121eI101B&quot;) %&gt;% filter(!is.na(Xcoord)) %&gt;% select(microsample) %&gt;% pull() #Calculate Hill numbers richness_caecum &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(caecum_samples)) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral_caecum &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(caecum_samples)) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic_caecum &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(caecum_samples)) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness_caecum %&gt;% full_join(neutral_caecum,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic_caecum,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write alpha diversities beta_diversity %&gt;% write_tsv(&quot;results/beta_div_caecum.tsv&quot;) #Select high-quality samples caecum_samples_hq &lt;- sample_metadata %&gt;% left_join(quality,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(quality &gt;= 5) %&gt;% filter(!is.na(Xcoord)) %&gt;% select(microsample) %&gt;% pull() caecum_samples_nmds &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(caecum_samples_hq)) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;dist&quot;) %&gt;% metaMDS(.,trymax = 999, k=2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;microsample&quot;) %&gt;% left_join(sample_metadata, by = join_by(microsample == microsample)) caecum_samples_nmds %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=protocol, shape=batch)) + geom_point(size=2) + scale_color_manual(values=c(&quot;#6375ad&quot;,&quot;#d1b454&quot;,&quot;#d6885e&quot;)) + theme_classic() + theme(legend.position=&quot;right&quot;, legend.box=&quot;vertical&quot;) + guides(color=guide_legend(title=&quot;Region&quot;)) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
